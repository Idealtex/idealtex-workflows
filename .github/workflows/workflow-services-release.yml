name: Release

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
      build_csharp:
        required: false
        type: boolean
        default: false
      build_dev:
        required: false
        type: boolean
        default: false
      unit_tests:
        required: false
        type: boolean
        default: false
      integration_tests:
        required: false
        type: boolean
        default: false
    secrets:
      RELEASE_TOKEN:
        required: true


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME_DEV: ${{ github.repository }}-dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history
    - uses: actions/setup-dotnet@v3
      if: ${{inputs.build_csharp}}
      with:
        dotnet-version: '7.x.x'
    - name: Dotnet build 
      if: ${{inputs.build_csharp}}
      run: dotnet build .

  unit:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history
    - name: Unit test
      if: ${{inputs.unit_tests}}
      run: docker compose -f compose-test.yaml up idealtex.${{ inputs.service_name }}.unittest

  integration:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history
    - name: Integration test
      if: ${{inputs.integration_tests}}
      run: docker compose -f compose-test.yaml up idealtex.${{ inputs.service_name }}.integrationtest

  tag:
    needs: [unit, integration]
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history
    - name: Git Version
      id: version
      uses: codacy/git-version@2.7.1
      with:
        # The name of the release branch
        release-branch: main
    - name: Create tag
      uses: actions/github-script@v6.4.0
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ steps.version.outputs.version }}',
            sha: context.sha
          })
      
  publish:
    needs: tag
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{needs.tag.outputs.new_tag}}
          labels: ${{ steps.meta.outputs.labels }}
          # extra_envs is a comma-separated list of ENV=VALUE
      
  publish_dev:
    needs: tag
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Log in to the Container registry
        if: ${{inputs.build_dev}}
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: ${{inputs.build_dev}}
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DEV }}
      - name: Build and push Docker image
        if: ${{inputs.build_dev}}
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./dockerfile_dev
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DEV }}:${{needs.tag.outputs.new_tag}}
          labels: ${{ steps.meta.outputs.labels }}
        
  release:
      needs: [tag, publish, publish_dev]
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: update release
        uses: dkalchenko/idealtex-workflows@main
        env:
          NEW_VERSION: ${{ needs.tag.outputs.new_tag }}
          SERVICE_NAME: ${{ inputs.service_name }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        
      
